
R version 3.2.3 (2015-12-10) -- "Wooden Christmas-Tree"
Copyright (C) 2015 The R Foundation for Statistical Computing
Platform: x86_64-w64-mingw32/x64 (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

> ##################################################################
> ## check elimination of random effects in rand and step functions
> ##################################################################
> 
> require(lmerTest)
Loading required package: lmerTest
Loading required package: Matrix
Loading required package: lme4

Attaching package: 'lmerTest'

The following object is masked from 'package:lme4':

    lmer

The following object is masked from 'package:stats':

    step

> 
> ## check for random coefficient models
> modelCarrots <- lmer(Preference ~  sens2*sens1*Homesize*Age
+                                     + (1 | product) + (1 + sens1 + sens2 | Consumer),
+                                      data=carrots)
> 
> ## the results for the rand function differ from the step
> ## because of the update function - changing the contrasts to contr.SAS
> rnd <- rand(modelCarrots)
> 
> 
> 
> stopifnot(all.equal(rnd$rand.table[,"p.value"], c(0.0000289113, 0.4852719557,
+                                                   0.0186101913)))
> 
> stp <- step(modelCarrots)
> 
> stp

Random effects:
               Chi.sq Chi.DF elim.num p.value
sens1:Consumer   2.45      3        1  0.4853
product         17.34      1     kept       0
sens2:Consumer   8.23      2     kept  0.0163

Fixed effects:
                          Sum Sq Mean Sq NumDF   DenDF F.value elim.num Pr(>F)
sens2:sens1:Homesize:Age  3.5460  1.1820     3 1003.07  1.1419        1 0.3311
sens2:Homesize:Age        1.2121  0.4040     3   94.98  0.3901        2 0.7604
sens2:sens1:Homesize      0.5873  0.5873     1 1006.10  0.5671        3 0.4516
sens2:Homesize            2.0757  2.0757     1   97.99  2.0051        4 0.1599
sens1:Homesize:Age        5.6623  1.8874     3 1007.10  1.8233        5 0.1412
sens1:Homesize            0.1513  0.1513     1 1010.17  0.1458        6 0.7027
Homesize:Age              5.9012  1.9671     3   94.85  1.8971        7 0.1353
sens2:sens1:Age           7.2292  2.4097     3 1011.14  2.3242        8 0.0734
sens2:sens1               0.1181  0.1181     1    7.98  0.1134        9 0.7450
sens1:Age                 1.4003  0.4668     3 1014.18  0.4484       10 0.7185
sens2:Age                 2.3193  0.7731     3   99.01  0.7440       11 0.5284
Age                       0.6683  0.2228     3   97.99  0.2144       12 0.8862
sens1                     0.5423  0.5423     1    8.98  0.5219       13 0.4884
sens2                    18.1648 18.1648     1   12.19 17.4799     kept 0.0012
Homesize                  5.8511  5.8511     1  100.97  5.6305     kept 0.0195

Least squares means:
            Homesize Estimate Standard Error   DF t-value Lower CI Upper CI
Homesize  1      1.0   4.9110         0.0871 39.9 56.3500     4.73     5.09
Homesize  3      2.0   4.6612         0.0937 48.9 49.7600     4.47     4.85
            p-value    
Homesize  1  <2e-16 ***
Homesize  3  <2e-16 ***
---
Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1

 Differences of LSMEANS:
               Estimate Standard Error    DF t-value Lower CI Upper CI p-value
Homesize 1 - 3      0.2          0.105 101.0    2.37    0.041    0.459    0.02
                
Homesize 1 - 3 *
---
Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1

Final model:
lme4::lmer(formula = Preference ~ sens2 + Homesize + (1 | product) + 
    (sens2 | Consumer), data = carrots, REML = reml.lmerTest.private, 
    contrasts = l.lmerTest.private.contrast, devFunOnly = devFunOnly.lmerTest.private)
> 
> 
> 
> 
> modelCarrots_red1 <- lmer(Preference ~ sens2*sens1*Homesize*Age
+                                      + (1 | product) + (1   + sens2 | Consumer),
+                                      data=carrots)
> 
> modelCarrots_red2 <- lmer(Preference ~
+                             sens2*sens1*Homesize*Age
+                           + (1 | product) + (1 | Consumer),
+                           data=carrots)
> 
> 
> modelCarrots_redp <- lmer(Preference ~
+                             sens2*sens1*Homesize*Age
+                            + (1   + sens2| Consumer),
+                           data=carrots)
> 
> res.lrt.s1 <- anova(modelCarrots, modelCarrots_red1, refit = FALSE)
> res.lrt.s2 <- anova(modelCarrots_red1, modelCarrots_red2, refit = FALSE)
> res.lrt.sp <- anova(modelCarrots_red1, modelCarrots_redp, refit = FALSE)
> 
> 
> stopifnot(all.equal(res.lrt.s1[2,"Pr(>Chisq)"], stp$rand.table[1,"p.value"]),
+           all.equal(res.lrt.s2[2,"Pr(>Chisq)"], stp$rand.table[3,"p.value"]),
+           all.equal(res.lrt.sp[2,"Pr(>Chisq)"], stp$rand.table[2,"p.value"]))
> 
> 
> 
> proc.time()
   user  system elapsed 
  27.62    0.26   28.23 
